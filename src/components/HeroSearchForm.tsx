// src/components/HeroSearchForm.tsx
'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import styles from './HeroSearchForm.module.css';

// [ ‚¨áÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏° ] ‡∏™‡∏£‡πâ‡∏≤‡∏á List ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dropdowns 
const propertyTypes = ['All', 'Villa', 'Condo', 'House', 'Apartment', 'Townhouse', 'Shophouse', 'Land'];
const priceRanges = [
  { value: '', label: 'Price Range' },
  { value: '0-10000', label: 'Under 10,000' },
  { value: '10000-30000', label: '10,000 - 30,000' },
  { value: '30000-50000', label: '30,000 - 50,000' },
  { value: '50000-100000', label: '50,000 - 100,000' },
  { value: '100000-', label: '100,000+' },
];
// [ ‚¨ÜÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏° ]

export default function HeroSearchForm() {
  const router = useRouter();
  const [searchStatus, setSearchStatus] = useState<'For Sale' | 'For Rent'>('For Sale');
  const [keyword, setKeyword] = useState('');
  
  // [ ‚¨áÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏° ] ‡πÄ‡∏û‡∏¥‡πà‡∏° 2 States ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dropdowns
  const [type, setType] = useState('All'); // 'All' ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  const [priceRange, setPriceRange] = useState(''); // '' ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (Price Range)
  // [ ‚¨ÜÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏° ]

  // [ üîÑ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ] ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î handleSearch ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å field
  // [ üîÑ ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ üîÑ ]
  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault(); 

    const params = new URLSearchParams();
    params.append('status', searchStatus);

    if (keyword.trim()) {
      params.append('keyword', keyword.trim());
    }
    
    // [ ‚¨áÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ min/max ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ ‚¨áÔ∏è ]
    let minPrice: string | null = null;
    let maxPrice: string | null = null;
    
    if (type !== 'All') {
      params.set('type', type);
    }
    
    if (priceRange) {
      const [min, max] = priceRange.split('-');
      if (min) {
        params.set('minPrice', min);
        minPrice = min; // ‚≠êÔ∏è ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤
      }
      if (max) {
        params.set('maxPrice', max);
        maxPrice = max; // ‚≠êÔ∏è ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤
      }
    }

    // --- [ ‚¨áÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏™‡πà‡∏ß‡∏ô Log Search ] ‚¨áÔ∏è ---
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Object ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÑ‡∏õ Log
    const logData = {
      status: searchStatus,
      type: type !== 'All' ? type : null,
      minPrice: minPrice ? parseInt(minPrice) : null,
      maxPrice: maxPrice ? parseInt(maxPrice) : null,
      keyword: keyword.trim() || null
    };

    // ‡∏¢‡∏¥‡∏á API Log (‡πÅ‡∏ö‡∏ö "fire-and-forget" - ‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà)
    fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/log-search`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(logData)
    });
    // --- [ ‚¨ÜÔ∏è ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° ‚¨ÜÔ∏è ] ---

    // (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ‡∏™‡πà‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    router.push(`/properties?${params.toString()}`);
  };

  return (
    <div className={styles.heroContainer}>
      <div className={styles.heroContent}>
        <h1>Find Your Dream Property in Phuket</h1>
        <p>The best place to find villas, condos, and houses</p>

        {/* [ üîÑ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ] ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏Ñ‡πà‡πÉ‡∏ô .searchInputWrapper */}
        <form className={styles.searchForm} onSubmit={handleSearch}>
          <div className={styles.statusTabs}>
  <button
    type="button"
    className={searchStatus === 'For Sale' ? styles.active : ''}
    onClick={() => setSearchStatus('For Sale')}
  >
    Sale
  </button>
  <button
    type="button"
    className={searchStatus === 'For Rent' ? styles.active : ''}
    onClick={() => setSearchStatus('For Rent')}
  >
    Rent
  </button>
  {/* ‚¨áÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‚¨áÔ∏è */}
  <button
    type="button"
    className={searchStatus === 'For Rent (Daily)' ? styles.active : ''}
    onClick={() => setSearchStatus('For Rent (Daily)')}
  >
    Daily Rent
  </button>
</div>

          <div className={styles.searchInputWrapper}>
          
            {/* [ ‚¨áÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏° ] Dropdown 1: Property Type */}
            <select 
  value={type} 
  onChange={(e) => setType(e.target.value)}
  className={styles.searchDropdown} // ‚≠êÔ∏è ‡πÉ‡∏ä‡πâ Class ‡πÉ‡∏´‡∏°‡πà
>
              {propertyTypes.map(t => (
                <option key={t} value={t}>{t === 'All' ? 'Property Type' : t}</option>
              ))}
            </select>

            {/* [ ‚¨áÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏° ] Dropdown 2: Price Range */}
            <select 
              value={priceRange} 
              onChange={(e) => setPriceRange(e.target.value)}
              className={styles.searchDropdown} // ‚≠êÔ∏è ‡πÉ‡∏ä‡πâ Class ‡πÉ‡∏´‡∏°‡πà
            >
              {priceRanges.map(r => (
                <option key={r.value} value={r.value}>{r.label}</option>
              ))}
            </select>
            {/* [ ‚¨ÜÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏° ] */}

            <input
              type="text"
              placeholder="Enter a location, or property name..."
              value={keyword}
              onChange={(e) => setKeyword(e.target.value)}
              className={styles.searchInput} // ‚≠êÔ∏è Keyword Input (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
            />
            
            <button type="submit" className={styles.searchButton}>
              Search
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}